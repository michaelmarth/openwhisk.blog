<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on OpenWhisk and friends</title><link>https://openwhisk.blog/post/</link><description>Recent content in Posts on OpenWhisk and friends</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Copyright [Michele Sciabarrà](https://www.linkedin.com/in/msciab) | Book [Learning Apache OpenWhisk](https://www.oreilly.com/library/view/learning-apache-openwhisk/9781492046158/) published by [O'Reilly](https://www.oreilly.com/)</copyright><lastBuildDate>Mon, 03 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://openwhisk.blog/post/index.xml" rel="self" type="application/rss+xml"/><item><title>The quest for the next big thing</title><link>https://openwhisk.blog/post/we-need-easy-solutions/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate><guid>https://openwhisk.blog/post/we-need-easy-solutions/</guid><description>Where to invest in IT innovations today? AI looks promising, but in the meanwhile, the cloud is booming. Why? Many reasons: from cost savings to the fact that the next-generation applications can only be &amp;ldquo;cloud-native&amp;rdquo;. Even the smallest business may need tens of servers, and using the cloud is going to be the only practical option.
So, where is the pain when it comes to moving applications to the cloud? The pain is in being cloud-native.</description></item><item><title>Easy OpenWhisk versus hard Kubernetes</title><link>https://openwhisk.blog/post/easy-vs-hard/</link><pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate><guid>https://openwhisk.blog/post/easy-vs-hard/</guid><description>Practically in every programming environment a dualism arises between the &amp;ldquo;difficult&amp;rdquo; approach, for real tough and the &amp;ldquo;easy&amp;rdquo; one, for mere mortals.
Usually it starts with the difficult approach, usally the only one available. Then the easy one appears, which is initially derided. Slowly the &amp;ldquo;easy&amp;rdquo; approach prevails and takes 80% of the market.
I saw this dualism appearing for the first time in home computers, with those who developed in Assembler and those in Basic.</description></item><item><title>The zen of OpenWhisk</title><link>https://openwhisk.blog/post/zen-and-openwhisk/</link><pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate><guid>https://openwhisk.blog/post/zen-and-openwhisk/</guid><description>&amp;ldquo;Zen Master, why is cloud programming so difficult?&amp;rdquo;
&amp;ldquo;The cloud isn&amp;rsquo;t difficult to program, the cloud simply is.&amp;rdquo; &amp;ldquo;Master, and what is the cloud?&amp;rdquo;
&amp;ldquo;Don&amp;rsquo;t ask yourself what the cloud is, just ask yourself what you want from the cloud.&amp;rdquo;
&amp;ldquo;I just want it runs my code.&amp;rdquo;
&amp;ldquo;And why don&amp;rsquo;t you just put your code in the cloud?&amp;rdquo;
&amp;ldquo;Because I cannot just put my code in the cloud!&amp;rdquo;
&amp;ldquo;Why not?&amp;rdquo;</description></item></channel></rss>